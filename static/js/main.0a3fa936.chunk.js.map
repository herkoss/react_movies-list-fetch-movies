{"version":3,"sources":["components/MovieCard/MovieCard.js","components/MoviesList/MoviesList.js","components/FindMovie/FindMovie.js","App.js","index.js"],"names":["MovieCard","title","description","imgUrl","imdbUrl","className","src","alt","href","MoviesList","movies","map","movie","key","imdbId","FindMovie","addMovie","useState","setTitle","Response","setMovie","movieForCard","Title","Plot","Poster","imdbID","onSubmit","event","preventDefault","Object","values","some","value","undefined","onFormSubmit","htmlFor","type","id","placeholder","classNames","onChange","target","inputHandler","onClick","url","fetch","then","movieFromServer","json","App","data","movieToAdd","find","currentMovies","ReactDOM","render","document","getElementById"],"mappings":"+wEAIaA,G,kBAAY,SAAC,GAAD,IACvBC,EADuB,EACvBA,MADuB,IAEvBC,mBAFuB,MAET,GAFS,EAGvBC,EAHuB,EAGvBA,OACAC,EAJuB,EAIvBA,QAJuB,OAMvB,yBAAKC,UAAU,QACb,yBAAKA,UAAU,cACb,4BAAQA,UAAU,iBAChB,yBACEC,IAAKH,EACLI,IAAI,gBAIV,yBAAKF,UAAU,gBACb,yBAAKA,UAAU,SACb,yBAAKA,UAAU,cACb,4BAAQA,UAAU,kBAChB,yBACEC,IAAI,wBACJC,IAAI,WAIV,yBAAKF,UAAU,iBACb,uBAAGA,UAAU,cAAcJ,KAI/B,yBAAKI,UAAU,WACZH,EACD,6BACA,uBAAGM,KAAMJ,GAAT,aC/BKK,EAAa,SAAC,GAAD,QACxBC,cADwB,MACf,GADe,SAGxB,yBAAKL,UAAU,UACZK,EAAOC,KAAI,SAAAC,GAAK,OACf,kBAAC,EAAD,eAAWC,IAAKD,EAAME,QAAYF,S,gBCJ3BG,G,MAAY,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAC1B,EAA0BC,mBAAS,IAAnC,mBAAOhB,EAAP,KAAciB,EAAd,KACA,EAA0BD,mBAAS,CAAEE,SAAU,aAA/C,mBAAOP,EAAP,KAAcQ,EAAd,KAeMC,EAAe,CACnBpB,MAAOW,EAAMU,MACbpB,YAAaU,EAAMW,KACnBpB,OAAQS,EAAMY,OACdpB,QAAQ,8BAAD,OAAgCQ,EAAMa,QAC7CX,OAAQF,EAAMa,QAYhB,OACE,oCACE,0BACEpB,UAAU,aACVqB,SAAU,SAAAC,GAAK,OAbA,SAACA,GACpBA,EAAMC,iBACFC,OAAOC,OAAOT,GAAcU,MAAK,SAAAC,GAAK,YAAcC,IAAVD,MAI9ChB,EAASK,GAOca,CAAaP,KAEhC,yBAAKtB,UAAU,SACb,2BAAOA,UAAU,QAAQ8B,QAAQ,eAAjC,eAIA,yBAAK9B,UAAU,WACb,2BACE+B,KAAK,OACLC,GAAG,cACHC,YAAY,0BACZjC,UAAWkC,IAAW,QAAS,CAC7B,YAAgC,UAAnB3B,EAAMO,WAErBa,MAAO/B,EACPuC,SAAU,SAAAb,GAAK,OAlDN,SAACA,GACpBT,EAASS,EAAMc,OAAOT,OACtBZ,EAAS,CAAED,SAAU,aAgDQuB,CAAaf,OAKf,UAAnBf,EAAMO,UACJ,uBAAGd,UAAU,kBAAb,yCAQN,yBAAKA,UAAU,oBACb,yBAAKA,UAAU,WACb,4BACE+B,KAAK,SACL/B,UAAU,kBACVsC,QAhEQ,WAClB,IAAMC,EAAG,oCAAgC3C,EAAhC,oBAET4C,MAAMD,GACHE,MAAK,SAAAC,GAAe,OAAIA,EAAgBC,UACxCF,MAAK,SAAAC,GAAe,OAAI3B,EAAS2B,QAwD5B,iBASF,yBAAK1C,UAAU,WACb,4BACE+B,KAAK,SACL/B,UAAU,qBAFZ,sBAUc,SAAnBO,EAAMO,SACL,yBAAKd,UAAU,aACb,wBAAIA,UAAU,SAAd,WACA,kBAAC,EAAcgB,IAGjB,qD,OCjGK4B,EAAM,WACjB,MAA2BhC,mBAASiC,GAApC,mBAAOxC,EAAP,KAAeU,EAAf,KAYA,OACE,yBAAKf,UAAU,QACb,yBAAKA,UAAU,gBACb,kBAAC,EAAD,CACEK,OAAQA,KAGZ,yBAAKL,UAAU,WACb,kBAAC,EAAD,CACEW,SAnBS,SAACmC,GACEzC,EAAO0C,MAAK,SAAAxC,GAAK,OAAIA,EAAME,SAAWqC,EAAWrC,WAMnEM,GAAS,SAAAiC,GAAa,4BAAQA,GAAR,CAAuBF,aCXjDG,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.0a3fa936.chunk.js","sourcesContent":["import React from 'react';\nimport './MovieCard.scss';\nimport PropTypes from 'prop-types';\n\nexport const MovieCard = ({\n  title,\n  description = '',\n  imgUrl,\n  imdbUrl,\n}) => (\n  <div className=\"card\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          src={imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\">{title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\">\n        {description}\n        <br />\n        <a href={imdbUrl}>IMDB</a>\n      </div>\n    </div>\n  </div>\n);\n\nMovieCard.propTypes = {\n  title: PropTypes.string.isRequired,\n  description: PropTypes.string.isRequired,\n  imgUrl: PropTypes.string.isRequired,\n  imdbUrl: PropTypes.string.isRequired,\n};\n","import React from 'react';\n\nimport './MoviesList.scss';\nimport PropTypes from 'prop-types';\nimport { MovieCard } from '../MovieCard';\n\nexport const MoviesList = ({\n  movies = [],\n}) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard key={movie.imdbId} {...movie} />\n    ))}\n  </div>\n);\n\nMoviesList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      imdbId: PropTypes.string.isRequired,\n    }).isRequired,\n  ).isRequired,\n};\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport './FindMovie.scss';\n\nimport { MovieCard } from '../MovieCard';\n\nexport const FindMovie = ({ addMovie }) => {\n  const [title, setTitle] = useState('');\n  const [movie, setMovie] = useState({ Response: 'Changing' });\n\n  const inputHandler = (event) => {\n    setTitle(event.target.value);\n    setMovie({ Response: 'Changing' });\n  };\n\n  const onFindMovie = () => {\n    const url = `http://www.omdbapi.com/?t=${title}&apikey=8de92ae6`;\n\n    fetch(url)\n      .then(movieFromServer => movieFromServer.json())\n      .then(movieFromServer => setMovie(movieFromServer));\n  };\n\n  const movieForCard = {\n    title: movie.Title,\n    description: movie.Plot,\n    imgUrl: movie.Poster,\n    imdbUrl: `https://www.imdb.com/title/${movie.imdbID}`,\n    imdbId: movie.imdbID,\n  };\n\n  const onFormSubmit = (event) => {\n    event.preventDefault();\n    if (Object.values(movieForCard).some(value => value === undefined)) {\n      return;\n    }\n\n    addMovie(movieForCard);\n  };\n\n  return (\n    <>\n      <form\n        className=\"find-movie\"\n        onSubmit={event => onFormSubmit(event)}\n      >\n        <div className=\"field\">\n          <label className=\"label\" htmlFor=\"movie-title\">\n            Movie title\n          </label>\n\n          <div className=\"control\">\n            <input\n              type=\"text\"\n              id=\"movie-title\"\n              placeholder=\"Enter a title to search\"\n              className={classNames('input', {\n                'is-danger': movie.Response === 'False',\n              })}\n              value={title}\n              onChange={event => inputHandler(event)}\n            />\n          </div>\n\n          {\n            movie.Response === 'False' && (\n              <p className=\"help is-danger\">\n                Can&apos;t find a movie with such a title\n              </p>\n            )\n          }\n\n        </div>\n\n        <div className=\"field is-grouped\">\n          <div className=\"control\">\n            <button\n              type=\"button\"\n              className=\"button is-light\"\n              onClick={onFindMovie}\n            >\n              Find a movie\n            </button>\n          </div>\n\n          <div className=\"control\">\n            <button\n              type=\"submit\"\n              className=\"button is-primary\"\n            >\n              Add to the list\n            </button>\n          </div>\n        </div>\n      </form>\n\n      {movie.Response === 'True' ? (\n        <div className=\"container\">\n          <h2 className=\"title\">Preview</h2>\n          <MovieCard {...movieForCard} />\n        </div>\n      ) : (\n        <span>Type movie title</span>\n      )}\n    </>\n  );\n};\n\nFindMovie.propTypes = {\n  addMovie: PropTypes.func.isRequired,\n};\n","import React, { useState } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { FindMovie } from './components/FindMovie';\nimport data from './api/movies.json';\n\nexport const App = () => {\n  const [movies, setMovie] = useState(data);\n\n  const addMovie = (movieToAdd) => {\n    const duplicate = movies.find(movie => movie.imdbId === movieToAdd.imdbId);\n\n    if (duplicate) {\n      return;\n    }\n\n    setMovie(currentMovies => [...currentMovies, movieToAdd]);\n  };\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        <MoviesList\n          movies={movies}\n        />\n      </div>\n      <div className=\"sidebar\">\n        <FindMovie\n          addMovie={addMovie}\n        />\n      </div>\n    </div>\n  );\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}